#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    quick-tap-ms = <200>;
    require-prior-idle-ms = <200>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        bluetooth_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <45 44>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <14 15>;
        };

        shift+tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <26 27>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
            &kp Q         &kp L             &kp U             &kp COMMA         &kp DOT     &kp F     &kp W              &kp R             &kp Y         &kp P
&caps_word  &kp E         &kp I             &mt LEFT_SHIFT A  &mt LEFT_SHIFT O  &kp MINUS   &kp K     &mt RIGHT_SHIFT T  &mt RSHIFT N      &kp S         &kp H       &kp HASH
&kp UNDER   &kp Z         &kp X             &kp C             &kp V             &kp SEMI    &kp G     &kp D              &kp M             &kp J         &kp B       &kp FSLH
&tog 4      &out OUT_TOG  &mt LEFT_ALT ESC  &lt 1 LANG2       &mt LCTRL SPACE   &kp DELETE  &kp BSPC  &mt RCTRL ENTER    &lt 3 LANGUAGE_1  &kp LEFT_WIN  &bt BT_PRV  &bt BT_NXT
            >;
        };

        symbol-numpad {
            bindings = <
           &kp DOLLAR  &kp LBKT  &kp LESS_THAN      &kp RBKT  &kp GREATER_THAN  &kp PERCENT   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp AMPERSAND
&kp GRAVE  &kp CARET   &kp LPAR  &kp SINGLE_QUOTE   &kp RPAR  &kp EXCL          &kp KP_EQUAL  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ASTERISK  &kp PIPE
&kp COLON  &kp TILDE   &kp LBRC  &kp DOUBLE_QUOTES  &kp RBRC  &kp QMARK         &kp KP_PLUS   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DIVIDE    &kp BACKSLASH
&trans     &trans      &trans    &trans             &trans    &trans            &trans        &trans           &kp KP_NUMBER_0  &kp KP_DOT       &trans           &trans
            >;
        };

        non-numpad {
            bindings = <
        &trans  &trans  &trans  &trans  &trans  &trans     &kp N7  &kp N8  &kp N9   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp EQUAL  &kp N4  &kp N5  &kp N6   &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp PLUS   &kp N1  &kp N2  &kp N3   &kp SLASH  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &kp N0  &kp DOT  &trans     &trans
            >;
        };

        others {
            bindings = <
        &kp F2  &kp F3  &kp F4   &kp F5   &kp F6   &kp PRINTSCREEN  &kp HOME  &kp UP            &kp PG_UP      &kp C_VOL_DN
&kp F1  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &kp C_PREV       &kp LEFT  &kp DOWN          &kp RIGHT      &kp C_MUTE            &kp C_VOL_UP
&kp F7  &none   &none   &none    &none    &none    &kp C_NEXT       &kp END   &kp C_PLAY_PAUSE  &kp PAGE_DOWN  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC
&trans  &trans  &trans  &trans   &trans   &trans   &trans           &trans    &trans            &trans         &trans                &trans
            >;
        };

        non-numpad-toggle {
            bindings = <
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        unused {
            bindings = <
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        keypad_mode {
            if-layers = <1 5>;
            then-layer = <2>;
        };
    };
};